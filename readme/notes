Untuk mengetes API menggunakan **Postman**, berikut langkah-langkahnya:

### 1. **Setup Route API**
Pastikan kamu sudah menjalankan server Laravel menggunakan perintah:
```bash
php artisan serve
```
Secara default, server Laravel akan berjalan di `http://127.0.0.1:8000` atau `http://localhost:8000`.

### 2. **Testing di Postman**

#### A. **GET Request - Menampilkan semua hewan**
- **Method**: `GET`
- **URL**: `http://127.0.0.1:8000/api/animals`
- **Deskripsi**: Request ini akan memanggil method `index()` untuk menampilkan daftar hewan yang ada.
- **Langkah**:
  1. Buka Postman.
  2. Pilih method `GET`.
  3. Masukkan URL: `http://127.0.0.1:8000/api/animals`.
  4. Klik `Send`.
  5. Respons berupa daftar hewan akan ditampilkan.

#### B. **POST Request - Menambahkan hewan baru**
- **Method**: `POST`
- **URL**: `http://127.0.0.1:8000/api/animals`
- **Body**:
  - Pilih tab **Body**.
  - Pilih **raw** dan **JSON** sebagai tipe konten.
  - Tambahkan JSON payload seperti ini:
    ```json
    {
      "animal": "anjing"
    }
    ```
- **Deskripsi**: Request ini akan memanggil method `store()` untuk menambahkan hewan baru.
- **Langkah**:
  1. Pilih method `POST`.
  2. Masukkan URL: `http://127.0.0.1:8000/api/animals`.
  3. Pilih tab **Body**.
  4. Pilih **raw** dan tipe data **JSON**.
  5. Masukkan JSON payload seperti:
     ```json
     {
       "animal": "anjing"
     }
     ```
  6. Klik `Send`.
  7. Jika sukses, respons JSON akan menampilkan daftar hewan yang diperbarui.

#### C. **PUT Request - Memperbarui data hewan**
- **Method**: `PUT`
- **URL**: `http://127.0.0.1:8000/api/animals/{id}`
  - Ganti `{id}` dengan index hewan yang ingin diperbarui, misalnya: `http://127.0.0.1:8000/api/animals/1`.
- **Body**:
  - Pilih **raw** dan **JSON**.
  - Tambahkan payload seperti ini:
    ```json
    {
      "animal": "burung"
    }
    ```
- **Deskripsi**: Request ini akan memanggil method `update()` untuk memperbarui data hewan berdasarkan `id`.
- **Langkah**:
  1. Pilih method `PUT`.
  2. Masukkan URL: `http://127.0.0.1:8000/api/animals/1` (misalnya, untuk memperbarui hewan dengan ID 1).
  3. Pilih tab **Body** dan masukkan payload JSON berikut:
     ```json
     {
       "animal": "burung"
     }
     ```
  4. Klik `Send`.
  5. Jika sukses, respons JSON akan menampilkan daftar hewan yang telah diperbarui.

#### D. **DELETE Request - Menghapus hewan**
- **Method**: `DELETE`
- **URL**: `http://127.0.0.1:8000/api/animals/{id}`
  - Ganti `{id}` dengan index hewan yang ingin dihapus, misalnya: `http://127.0.0.1:8000/api/animals/1`.
- **Deskripsi**: Request ini akan memanggil method `destroy()` untuk menghapus hewan berdasarkan `id`.
- **Langkah**:
  1. Pilih method `DELETE`.
  2. Masukkan URL: `http://127.0.0.1:8000/api/animals/1` (misalnya, untuk menghapus hewan dengan ID 1).
  3. Klik `Send`.
  4. Jika sukses, respons JSON akan menampilkan daftar hewan yang telah dihapus.

### Catatan Tambahan:
- Pastikan server Laravel kamu berjalan ketika kamu mengetes API di Postman.
- Untuk menghindari masalah dengan CORS saat mengakses API dari frontend, pastikan kamu sudah mengonfigurasi CORS dengan benar di Laravel (jika ada kebutuhan).

Apakah ada bagian lain yang perlu dijelaskan lebih lanjut?
